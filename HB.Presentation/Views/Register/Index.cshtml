@{
    ViewData["Title"] = "Register";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="SignUp.css">


</head>
<body>
    <div class="header">
        <a href="HomePage.html">
            <img src="logo.png" alt="logo" width="150px" height="130px">
        </a>
        </a>
    </div>


    <div class="vertical-menu">
        <a href="Reservation.html">Reservations</a>
        <a href="OurRooms.html">Our Rooms </a>
        <a href="CommentsAboutUs.html">Comments About Us </a>
        <a href="Contact.html">Contact </a>

        <a href="SignUp.html" class="right active">SignUp</a>
        <a href="Login.html" class="right ">Signin</a>
    </div>

    <form action="@Url.Action("SignUp","Register")" style="max-width:500px;margin:auto">
        <div class="container">

            <h1>Sign Up</h1>
            <p>Please fill in this form to create an account.</p>
            <hr>
            <label for="usrname">Name</label>
            <input type="text" id="usrname" name="usrname" required>

            <label for="sname">Surname</label>
            <input type="text" id="snmame" name="sname" required>

            <label for="email">Email</label>
            <input type="text" id="email" name="email" required>

            <label for="phonenum">Phone Number</label>
            <input type="text" id="phonenum" name="phonenum" required>

            <label for="psw">Password</label>
            <input type="password" id="psw" name="psw" pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}" title="Must contain at least one number and one uppercase and lowercase letter, and at least 6 or more characters" required>

            <label for="psw_ag">Password Again</label>
            <input type="password" id="psw_ag" name="psw_ag" pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}" title="Must contain at least one number and one uppercase and lowercase letter, and at least 6 or more characters" required>

            <p>Do you have an account?  <a href="@Url.Action("Login", "Login")" style="color:Indigo"><u>Sign in  </u></a></p>
            <div class="clearfix">

                <input type="submit" formaction="HomePage.html" value="Sign Up">


            </div>
    </form>
    </div>

    <div id="message">
        <h3>Password must contain the following:</h3>
        <p id="letter" class="invalid">A <b>lowercase</b> letter</p>
        <p id="capital" class="invalid">A <b>capital (uppercase)</b> letter</p>
        <p id="number" class="invalid">A <b>number</b></p>
        <p id="length" class="invalid">Minimum <b>6 characters</b></p>
        <p id="passag" class="invalid">Minimum <b>6 characters</b></p>
    </div>

    <script>
var myInput = document.getElementById("psw");
var myInput2 = document.getElementById("psw_ag");
var letter = document.getElementById("letter");
var capital = document.getElementById("capital");
var number = document.getElementById("number");
var length = document.getElementById("length");

// When the user clicks on the password field, show the message box
myInput.onfocus = function() {
  document.getElementById("message").style.display = "block";
}

// When the user clicks outside of the password field, hide the message box
myInput.onblur = function() {
  document.getElementById("message").style.display = "none";
}

// When the user starts to type something inside the password field
myInput.onkeyup = function() {
  // Validate lowercase letters
  var lowerCaseLetters = /[a-z]/g;
  if(myInput.value.match(lowerCaseLetters)) {
    letter.classList.remove("invalid");
    letter.classList.add("valid");
  } else {
    letter.classList.remove("valid");
    letter.classList.add("invalid");
  }

  // Validate capital letters
  var upperCaseLetters = /[A-Z]/g;
  if(myInput.value.match(upperCaseLetters)) {
    capital.classList.remove("invalid");
    capital.classList.add("valid");
  } else {
    capital.classList.remove("valid");
    capital.classList.add("invalid");
  }

  // Validate numbers
  var numbers = /[0-9]/g;
  if(myInput.value.match(numbers)) {
    number.classList.remove("invalid");
    number.classList.add("valid");
  } else {
    number.classList.remove("valid");
    number.classList.add("invalid");
  }

  // Validate length
  if(myInput.value.length >= 8) {
    length.classList.remove("invalid");
    length.classList.add("valid");
  } else {
    length.classList.remove("valid");
    length.classList.add("invalid");
  }
}
if(myInput2.value  == myInput.value) {
    passag.classList.remove("invalid");
    passag.classList.add("valid");
  } else {
    passag.classList.remove("valid");
    passag.classList.add("invalid");
  }
}

    </script>

</body>
<footer>
    <p>&#169 2020 Happy Bananas. All rights reserved.</p>
</footer>
</html>
